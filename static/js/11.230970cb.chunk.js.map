{"version":3,"sources":["components/reuseable/FormField.js","pages/catalogue/AddForm.js","components/DataTable.js","pages/catalogue/ViewList.js","pages/Catalogue.js"],"names":["FormField","_ref","label","name","value","type","options","onChange","error","_jsxs","className","children","_jsx","htmlFor","required","autoComplete","id","map","option","placeholder","AddForm","_useSelector","useSelector","state","catalogue","factory_list","edit","catalogue_data","usersString","localStorage","getItem","usersd","JSON","parse","_useState","useState","_useState2","_slicedToArray","dispatch","useDispatch","_useState3","_useState4","formErrors","setFormErrors","validateForm","errors","catalogueData","lot","invoice","factory","grade","net_weight","price","pkgs","totalkg","warehouse","category","sale_no","_useState5","brokers","link_id","posted","username","_useState6","setCatalogueData","getUserData","event","target","prevState","_objectSpread","_defineProperty","filter","ware","addAccounts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","Object","keys","length","abrupt","preventDefault","saveData","getAllcatalogue","swal","title","text","icon","timer","button","stop","_x","apply","arguments","useEffect","getAllfactory","_Fragment","shead","defaultValue","onClick","updateData","DataTable","columns","data","_useTable","useTable","initialState","pageIndex","pageSize","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","setGlobalFilter","nextPage","canNextPage","previousPage","canPreviousPage","pageOptions","setPageSize","globalFilter","Number","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","disabled","ViewList","users","catalogue_list","catList","useMemo","item","Header","accessor","Cell","selectData","original","itemId","buttons","dangerMode","then","confirmDelete","deleteData","Catalogue","history","useNavigate","token","sessionStorage"],"mappings":"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","file":"static/js/11.230970cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormField = ({ label, name, value, type, options, onChange ,error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name} className=\"col-sm-3 control-label\">\r\n        {label}\r\n      </label>\r\n      <div className=\"col-sm-9\">\r\n        {type === \"select\" ? (\r\n          <select\r\n            required\r\n            value={value}\r\n            onChange={onChange}\r\n            name={name}\r\n            autoComplete=\"off\"\r\n            id={name}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\"> -- Select {label} -- </option>\r\n            {options.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <input\r\n            required\r\n            className=\"form-control\"\r\n            type={type}\r\n            value={value}\r\n            name={name}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            onChange={onChange}\r\n            id={name}\r\n          />\r\n        )}\r\n          {error && <p className=\"text-danger\">{error}</p>} {/* Display error message */}\r\n   \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { throttle } from 'lodash';\r\n\r\nimport FormField from \"../../components/reuseable/FormField\";\r\nimport {\r\n  getAllcatalogue,\r\n  getAllfactory,\r\n  saveData,\r\n  updateData,\r\n} from \"../../store/catalogueSlice\";\r\nconst AddForm = () => {\r\n  const { factory_list, edit, catalogue_data } = useSelector(\r\n    (state) => state.catalogue\r\n  );\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const usersd = JSON.parse(usersString);\r\n  const [users, setUsers] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const validateForm = () => {\r\n    const errors = {};\r\n  \r\n    // Perform validation for each field\r\n    if (!catalogueData.lot) {\r\n      errors.lot = \"Lot is required.\";\r\n    }\r\n    if (!catalogueData.invoice) {\r\n      errors.invoice = \"Invoice is required.\";\r\n    }\r\n    if (!catalogueData.factory) {\r\n      errors.factory = \"Factory is required.\";\r\n    }\r\n    if (!catalogueData.grade) {\r\n      errors.grade = \"Grade is required.\";\r\n    }  if (!catalogueData.net_weight) {\r\n      errors.net_weight = \"Weight is required.\";\r\n    }  if (!catalogueData.price) {\r\n      errors.price = \"Rate is required.\";\r\n    }  if (!catalogueData.pkgs) {\r\n      errors.pkgs = \"Pkgs is required.\";\r\n    }  if (!catalogueData.totalkg) {\r\n      errors.totalkg = \"Total is required.\";\r\n    }  if (!catalogueData.warehouse) {\r\n      errors.warehouse = \"Warehouse is required.\";\r\n    }  if (!catalogueData.category) {\r\n      errors.category = \"Category is required.\";\r\n    }  if (!catalogueData.sale_no) {\r\n      errors.sale_no = \"Sale No is required.\";\r\n    }\r\n\r\n\r\n    // ... perform validation for other fields ...\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  const gradeOptions = [\r\n    { value: \"FP\", label: \"FP\" },\r\n    { value: \"FBOP\", label: \"FBOP\" },\r\n    { value: \"BOP\", label: \"BOP\" },\r\n    { value: \"GBOP\", label: \"GBOP\" },\r\n    { value: \"OF\", label: \"OF\" },\r\n    { value: \"FOF\", label: \"FOF\" },\r\n    { value: \"PF\", label: \"PF\" },\r\n    { value: \"RD\", label: \"RD\" },\r\n    { value: \"PD\", label: \"PD\" },\r\n    { value: \"CD\", label: \"CD\" },\r\n  ];\r\n\r\n  const categoryOptions = [\r\n    { value: \"DUST\", label: \"DUST\" },\r\n    { value: \"LEAF\", label: \"LEAF\" },\r\n    { value: \"SUPPLIMENT\", label: \"SUPPLIMENT\" },\r\n  ];\r\n  const [catalogueData, setCatalogueData] = useState({\r\n    lot: \"\",\r\n    invoice: \"\",\r\n    factory: \"\",\r\n    grade: \"\",\r\n    net_weight: \"\",\r\n    price: \"\",\r\n    pkgs: \"\",\r\n    totalkg: \"\",\r\n    brokers: usersd.link_id,\r\n    warehouse: \"\",\r\n    category: \"\",\r\n    sale_no: \"\",\r\n    posted: usersd.username,\r\n  });\r\n\r\n  const getUserData = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setCatalogueData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const warehouse = factory_list.filter((ware) => ware.type === \"WAREHOUSE\");\r\n  const factory = factory_list.filter((factory) => factory.type === \"FACTORY\");\r\n\r\n  const addAccounts = async (e) => {\r\n    const errors = validateForm();\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n     await dispatch(saveData(catalogueData));\r\n      setCatalogueData({\r\n        lot: \"\",\r\n        invoice: \"\",\r\n        factory: \"\",\r\n        grade: \"\",\r\n        net_weight: \"\",\r\n        price: \"\",\r\n        pkgs: \"\",\r\n        totalkg: \"\",\r\n        brokers: usersd.link_id,\r\n        warehouse: \"\",\r\n        category: \"\",\r\n        sale_no: \"\",\r\n        posted: usersd.username,\r\n      });\r\n      dispatch(getAllcatalogue());\r\n      swal({\r\n        title: \"Success\",\r\n        text: \"Catalogue created successfully!!\",\r\n        icon: \"success\",\r\n        timer: 2500,\r\n        button: false,\r\n      });\r\n  };\r\n\r\n  const updateAccount = (e) => {\r\n    const errors = validateForm();\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return;\r\n    }\r\n    if (edit) {\r\n      e.preventDefault();\r\n      dispatch(updateData(catalogueData));\r\n      swal({\r\n        title: \"Success\",\r\n        text: \"Accounts updated successfully!!\",\r\n        icon: \"success\",\r\n        timer: 2500,\r\n        button: false,\r\n      });\r\n      setCatalogueData({\r\n        lot: \"\",\r\n        invoice: \"\",\r\n        factory: \"\",\r\n        grade: \"\",\r\n        net_weight: \"\",\r\n        price: \"\",\r\n        pkgs: \"\",\r\n        totalkg: \"\",\r\n        brokers: usersd.link_id,\r\n        warehouse: \"\",\r\n        category: \"\",\r\n        sale_no: \"\",\r\n        posted: usersd.username,\r\n      });\r\n      dispatch(getAllcatalogue());\r\n    }\r\n  };\r\n \r\n  // const throttledSetCatalogueData = throttle((data) => {\r\n  //   setCatalogueData(data);\r\n  // }, 500); // Adjust the throttle delay as per your requirements\r\n  useEffect(() => {\r\n dispatch(getAllfactory());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n  \r\n    if (edit) {\r\n      setCatalogueData(catalogue_data[0]);\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"col-lg-7 connectedSortable\">\r\n        <div className=\"box box-danger\">\r\n          {/* Tabs within a box */}\r\n          <div className=\"tab-content no-padding\">\r\n            {/* Morris chart - Sales */}\r\n            <div className=\"box-header header-custom\">\r\n              <h3 className=\"box-title\">Account Info</h3>\r\n            </div>\r\n            <div className=\"box-body form-horizontal\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <FormField\r\n                    label=\"Lot\"\r\n                    name=\"lot\"\r\n                    value={catalogueData.lot}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.lot} \r\n                  />\r\n\r\n                  <FormField\r\n                    label=\"Invoice\"\r\n                    name=\"invoice\"\r\n                    value={catalogueData.invoice}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.invoice} \r\n                  />\r\n\r\n                  <FormField\r\n                    label=\"Factory\"\r\n                    name=\"factory\"\r\n                    value={catalogueData.factory}\r\n                    type=\"select\"\r\n                    options={factory.map((shead) => ({\r\n                      value: shead.id,\r\n                      label: shead.name,\r\n                    }))}\r\n                    onChange={getUserData}\r\n                    error={formErrors.factory} \r\n                  />\r\n                  <FormField\r\n                    label=\"Grade\"\r\n                    name=\"grade\"\r\n                    value={catalogueData.grade}\r\n                    type=\"select\"\r\n                    options={gradeOptions}\r\n                    onChange={getUserData}\r\n                    error={formErrors.grade} \r\n                  />\r\n\r\n                  <FormField\r\n                    label=\" Net Weight\"\r\n                    name=\"net_weight\"\r\n                    value={catalogueData.net_weight}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.net_weight} \r\n                  />\r\n                  <FormField\r\n                    label=\"Unit Value\"\r\n                    name=\"price\"\r\n                    value={catalogueData.price}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.price} \r\n                  />\r\n\r\n                  <FormField\r\n                    label=\"Pkgs\"\r\n                    name=\"pkgs\"\r\n                    value={catalogueData.pkgs}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.pkgs} \r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <FormField\r\n                    label=\"Total Kg\"\r\n                    name=\"totalkg\"\r\n                    value={catalogueData.totalkg}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.totalkg} \r\n                  />\r\n                  <FormField\r\n                    label=\"Warehous\"\r\n                    name=\"warehouse\"\r\n                    value={catalogueData.warehouse}\r\n                    type=\"select\"\r\n                    options={warehouse.map((shead) => ({\r\n                      value: shead.id,\r\n                      label: shead.name,\r\n                    }))}\r\n                    onChange={getUserData}\r\n                    error={formErrors.warehouse} \r\n                  />\r\n                  <FormField\r\n                    label=\"Category\"\r\n                    name=\"category\"\r\n                    value={catalogueData.category}\r\n                    type=\"select\"\r\n                    options={categoryOptions}\r\n                    onChange={getUserData}\r\n                    error={formErrors.category} \r\n                  />\r\n\r\n                  <FormField\r\n                    label=\"Sale No\"\r\n                    name=\"sale_no\"\r\n                    value={catalogueData.sale_no}\r\n                    type=\"text\"\r\n                    onChange={getUserData}\r\n                    error={formErrors.sale_no} \r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* /.box-body */}\r\n            <div className=\"box-footer\">\r\n              <button type=\"submit\" className=\"btn btn-danger\">\r\n                Cancel\r\n              </button>\r\n              <input\r\n                type=\"button\"\r\n                name=\"save\"\r\n                className=\"btn btn-success pull-right\"\r\n                defaultValue={edit ? \"Update\" : \"Save\"}\r\n                id=\"butsave\"\r\n                onClick={edit ? updateAccount : addAccounts}\r\n              />\r\n            </div>\r\n            {/* /.box-footer */}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table';\r\n\r\nconst DataTable = ({ id, columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    nextPage,\r\n    canNextPage,\r\n    previousPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    setPageSize,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <div className=\"datatable-con\">\r\n    <div className=\"table-responsive\">\r\n      <div className=\"pagination-container\">\r\n        <div className=\"pagination-top\">\r\n          <div className=\"row\">\r\n        \r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((size) => (\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n            \r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={globalFilter || ''}\r\n            onChange={(e) => setGlobalFilter(e.target.value)}\r\n            placeholder=\"Search...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <table id=\"data-table\" className=\"table table-striped table-bordered\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination-container\">\r\n        <div className=\"pagination-bottom\">\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            Previous\r\n          </button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>\r\n          </span>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","\r\nimport DataTable from '../../components/DataTable'\r\nimport React, { useEffect,useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getAllcatalogue,\r\n  selectData,\r\n  deleteData,\r\n} from \"../../store/catalogueSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { getAuctiondetails } from '../../store/auctionSlice';\r\n\r\nconst ViewList = () => {\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n\r\n  const dispatch = useDispatch();\r\n  const { catalogue_list } = useSelector((state) => state.catalogue);\r\n\r\n  const catList = useMemo(\r\n    () => catalogue_list.filter((item) => item.brokers === users.link_id),\r\n    [catalogue_list, users.link_id]\r\n  );\r\n  const handleDelete = (itemId) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this item!\",\r\n      icon: \"warning\",\r\n      buttons: [\"Cancel\", \"Delete\"],\r\n      dangerMode: true,\r\n    }).then((confirmDelete) => {\r\n      if (confirmDelete) {\r\n        dispatch(deleteData(itemId)).then(() => {\r\n          swal({\r\n            title: \"Success\",\r\n            text: \"Item deleted successfully!\",\r\n            icon: \"success\",\r\n            timer: 2500,\r\n            button: false,\r\n          });\r\n          dispatch(getAllcatalogue());\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const columns = [\r\n    {\r\n      Header: 'LOT',\r\n      accessor: 'lot',\r\n    },\r\n    {\r\n      Header: 'INVOICE',\r\n      accessor: 'invoice',\r\n    },\r\n    {\r\n      Header: 'FACTORY',\r\n      accessor: 'factory_name',\r\n    },\r\n    {\r\n      Header: 'GRADE',\r\n      accessor: 'grade',\r\n    },\r\n    {\r\n      Header: 'NET.W',\r\n      accessor: 'net_weight',\r\n    },\r\n    {\r\n      Header: 'PACKAGE',\r\n      accessor: 'pkgs',\r\n    },\r\n    {\r\n      Header: 'TOTAL',\r\n      accessor: 'totalkg',\r\n    },\r\n    {\r\n      Header: 'WAREHOUSE',\r\n      accessor: 'warehouse_name',\r\n    },\r\n    {\r\n      Header: 'CATEGORY',\r\n      accessor: 'category',\r\n    },\r\n\r\n    {\r\n      Header: 'ACTION',\r\n      Cell: ({ row }) => (\r\n\r\n       <>\r\n        <button  onClick={() => dispatch(selectData(row.original.id))}\r\n        className=\"btn btn-warning mr-2\">Edit</button>\r\n         <button  onClick={() => handleDelete(row.original.id)}\r\n        className=\"btn btn-danger mr-1\">Delete</button>\r\n       </>\r\n      ),\r\n    },\r\n    // Add more columns as needed\r\n  ];\r\n  useEffect(() => {\r\n   \r\n    dispatch(getAllcatalogue());\r\n  }, []);\r\n \r\n  \r\n  return (\r\n    <section className=\"col-lg-12 connectedSortable\">\r\n    <div className=\"box box-primary\">\r\n    <div className=\"box-header header-custom\">\r\n      <div className=\"row \">\r\n        <div className=\"col-md-6 text-left\">\r\n          <h3 className=\"box-title\">Detail Info</h3>\r\n        </div>\r\n      \r\n      </div>\r\n    </div>\r\n    <DataTable columns={columns} data={catList} />\r\n    </div>\r\n      </section>\r\n  )\r\n}\r\n\r\nexport default ViewList","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { Context } from \"../context/Store\";\r\nimport AddForm from \"./catalogue/AddForm\";\r\nimport ViewList from \"./catalogue/ViewList\";\r\n\r\nconst Catalogue = () => {\r\n  const history = useNavigate();\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n  const signout = () => {\r\n    sessionStorage.removeItem('token');\r\n    // Redirect the user to the desired page after signout\r\n    // For example, you can redirect them to the home page\r\n    history('/');\r\n  };\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) {     // If there is no token, the user is not authenticated, so you can redirect them to the desired page\r\n      history('/');\r\n    } else {\r\n      history('/catalogue');\r\n    }\r\n  }, []);\r\n  \r\n\r\n  // const {  accounts, ToastContainer, getShead, edit } =\r\n  //   useContext(Context);\r\n\r\n  return (\r\n    <>\r\n     {/* <section className=\"content-header\">\r\n  <h1 className=\"marquee\">\r\n    <marquee behavior=\"scroll\" direction=\"left\" scrollamount={5}>\r\n      <p align=\"center\" style={{fontSize: 20, color: 'yellow'}}> Tea e-auction is an online platform for buying and selling tea products. It allows tea producers and buyers to participate in an online auction process for buying and selling tea products. The e-auction system provides a more efficient and transparent method for trading tea products compared to the traditional auction system. The platform offers several benefits, such as reduced transaction costs, faster transactions, and increased transparency. It also provides wider access to a larger pool of buyers and sellers, which can lead to better prices for both parties. Overall, tea e-auction is a useful tool for tea producers and buyers to trade their products in a more efficient and transparent manner. </p>\r\n    </marquee>\r\n  </h1>\r\n</section> */}\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <AddForm />\r\n            <ViewList />\r\n          </div>\r\n        </div>\r\n      </section>\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n"],"sourceRoot":""}